{"version":3,"sources":["App.module.css","API/youtube.js","Components/videoList.js","Components/selectedVideo.js","Components/search.js","App.js","serviceWorker.js","index.js","Components/youtube.module.css"],"names":["module","exports","apiKey","getYoutubeData","searchText","a","axios","get","params","part","maxResults","key","q","data","console","log","fetchMostPopularVideos","chart","regionCode","videoCategoryId","popularVideoData","getSimilarVideos","videoId","type","relatedToVideoId","similarVideos","VideoList","props","className","styles","videoList","Divider","section","Item","Group","link","map","d","index","onClick","e","onSelectItem","from","handleClick","Image","size","src","imageDetails","url","Content","Header","title","Meta","channel","Description","description","substring","SelectedVideo","video","useRef","useEffect","current","focus","Fragment","ref","videoPlayer","frameBorder","allowFullScreen","SearchComponent","handleSubmit","event","preventDefault","onSearch","state","value","handleChange","setState","target","onSubmit","this","Input","action","icon","placeholder","onChange","searchbar","Component","App","videoListData","selectedVideo","handleSearch","searchedContent","result","fetchVideoListData","category","items","item","id","snippet","channelTitle","thumbnails","high","fetchSimilarVideoData","similarVideoData","handleGoBack","showIcon","handleVideoSelect","videoIndex","filter","videoData","IconButton","youTubeIcon","color","Object","keys","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.95444b61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2m8z1\",\"App-logo\":\"App_App-logo__7t5Eb\",\"youTubeIcon\":\"App_youTubeIcon__2xeN_\",\"App-logo-spin\":\"App_App-logo-spin__OYACq\",\"App-header\":\"App_App-header__1XPfR\",\"App-link\":\"App_App-link__3i2Ys\"};","import axios from 'axios';\r\nconst url=\"https://www.googleapis.com/youtube/v3/search\";\r\nconst apiKey=\"AIzaSyBvx2G0l85dyEz8YKtvnVsI6fAX-j8Y-Jg\";\r\n \r\n// https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.search.list?\r\n//         part=snippet\r\n//         &chart=mostPopular\r\n//         &regionCode=es\r\n//         &videoCategoryId=17\r\n export const getYoutubeData=async(searchText)=>{\r\n     try\r\n     {\r\n        const data= await axios.get(url,{\r\n            params:{\r\n                part:'snippet',\r\n                maxResults:7,\r\n                key:apiKey,\r\n                q:searchText\r\n            }\r\n         });\r\n         return data.data;\r\n     } \r\n     catch(error){\r\n         console.log(error);\r\n     }    \r\n }\r\n export const fetchMostPopularVideos=async()=>{\r\n     try{\r\n        const popularVideoData=await axios.get('https://www.googleapis.com/youtube/v3/videos',{\r\n            params:{\r\n                part:'snippet',\r\n                chart:'mostPopular',\r\n                regionCode:'IN',\r\n                videoCategoryId:17,\r\n                maxResults:7,\r\n                key:apiKey\r\n            }            \r\n        });\r\n        console.log(popularVideoData.data);\r\n        return popularVideoData.data;\r\n     }\r\n     catch(error){\r\n\r\n     }\r\n }\r\n//  https://developers.google.com/apis-explorer/#p/youtube/v3/youtube.search.list?\r\n//         part=snippet\r\n//         &type=video\r\n//         &relatedToVideoId=wtLJPvx7-ys\r\n export const getSimilarVideos=async(videoId)=>{\r\n     try{\r\n        const similarVideos=await axios.get('https://www.googleapis.com/youtube/v3/search',{\r\n        params:{\r\n            part:'snippet',\r\n            maxResults:7,\r\n            type:'video',\r\n            regionCode:'IN',\r\n            relatedToVideoId:videoId,\r\n            key:apiKey\r\n        }\r\n    });\r\n    console.log(similarVideos.data);\r\n    return similarVideos.data\r\n     }  \r\n     catch(error)\r\n     {\r\n         console.log(error)\r\n     }  \r\n }","import React from 'react';\r\nimport styles from './youtube.module.css';\r\nimport { Item,Divider } from 'semantic-ui-react';\r\nconst VideoList=(props)=>{\r\n    console.log(props.data);\r\n    function handleClick(index){\r\n       // alert(index);\r\n       props.onSelectItem(index,props.from);\r\n    }\r\n    return (\r\n        <div className={styles.videoList}>\r\n            <Divider section/>\r\n            <Item.Group link>\r\n            {\r\n                props.data.map((d,index)=>{\r\n                    return <Item key={index} onClick={e=> handleClick(index)}>\r\n                    <Item.Image size='small' src={d.imageDetails.url} />\r\n                    <Item.Content>\r\n                  <Item.Header>{d.title}</Item.Header>\r\n                  <Item.Meta>{d.channel}</Item.Meta>\r\n                      <Item.Description>{d.description.substring(0,100)}</Item.Description>\r\n                    </Item.Content>\r\n                  </Item>\r\n                })\r\n            }\r\n            </Item.Group>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VideoList\r\n","import React ,{useRef,useEffect} from 'react';\r\nimport styles from './youtube.module.css';\r\nimport VideoList from './videoList';\r\nconst SelectedVideo=(props)=>{\r\n    const video=useRef(null);\r\n    useEffect(() => {\r\n        console.log(video)\r\n        video.current.focus();\r\n    });\r\n    console.log(props.data);\r\n    console.log(props.similarVideos)\r\n    const url=`https://www.youtube.com/embed/${props.data.videoId}?rel=0&hd=1&autoplay=1`;\r\n    return (       \r\n        <React.Fragment>\r\n            <div ref={video} className={styles.videoPlayer}>         \r\n        <iframe  src={url} title={props.data.title} frameBorder=\"0\" allowFullScreen></iframe>                  \r\n        </div>\r\n        <VideoList data={props.similarVideos}\r\n        onSelectItem={props.onSelectItem} from={props.from}/> \r\n        </React.Fragment>             \r\n    )\r\n}\r\nexport default SelectedVideo;\r\n","import React, { Component } from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\nimport styles from './youtube.module.css';\r\nclass SearchComponent extends Component {   \r\n    constructor(props) {\r\n        super(props)    \r\n        this.state = {\r\n             value:''\r\n        }\r\n    }\r\n    handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        this.props.onSearch(this.state.value);        \r\n    }\r\n    handleChange=(event)=>{\r\n        this.setState({\r\n            value:event.target.value\r\n        })\r\n     }\r\n    render() {\r\n        return (  \r\n            <form onSubmit={this.handleSubmit}>\r\n                 <Input action={{ icon: 'search' }} placeholder='Search...' \r\n                 value={this.state.value}\r\n                onChange={this.handleChange}               \r\n                className={styles.searchbar}/>  \r\n            </form>                                                                                  \r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchComponent;\r\n","import React, {Component} from 'react';\nimport styles from './App.module.css';\nimport {getYoutubeData,fetchMostPopularVideos,getSimilarVideos} from './API/youtube';\nimport SelectedVideo from './Components/selectedVideo';\nimport VideoList from './Components/videoList';\nimport SearchComponent from './Components/search';\nimport {Typography} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nclass App extends Component{\n  videoListData=[];\n  selectedVideo={};\n  similarVideos=[];\n  constructor(props) {\n    super(props)  \n    this.state = {\n       videoListData:[],\n       selectedVideo:{},\n       similarVideos:[],\n       showIcon:false\n    }\n  } \n  async componentDidMount(){\n    const data=await fetchMostPopularVideos();\n    this.fetchVideoListData(data,'trending');\n    this.setState({\n      videoListData:this.videoListData\n    })\n  }\n  handleSearch=async(searchedContent)=>{\n    console.log(searchedContent);\n    this.selectedVideo={};\n    const result=await getYoutubeData(searchedContent);  \n    console.log(result);  \n    this.fetchVideoListData(result,'searched');\n    console.log(this.videoListData);\n    this.setState({\n      videoListData:this.videoListData,\n      selectedVideo:this.selectedVideo\n    });\n}\nfetchVideoListData=(data,category)=>{\n  this.videoListData=[];\n  category === 'searched'? \n  this.videoListData=data.items.map((item)=>{\n   return{\n     videoId:item.id.videoId,\n     channel:item.snippet.channelTitle,\n     description:item.snippet.description,\n     title:item.snippet.title,\n     imageDetails:item.snippet.thumbnails.high\n   }\n }):this.videoListData=data.items.map((item)=>{\n  return{\n    videoId:item.id,\n    channel:item.snippet.channelTitle,\n    description:item.snippet.description,\n    title:item.snippet.title,\n    imageDetails:item.snippet.thumbnails.high\n  }\n})\n\n}\nfetchSimilarVideoData=(similarVideoData)=>{\n  this.similarVideos=[];\nthis.similarVideos=similarVideoData.items.map((item)=>{\n  return{\n    videoId:item.id.videoId,\n    channel:item.snippet.channelTitle,\n    description:item.snippet.description,\n    title:item.snippet.title,\n    imageDetails:item.snippet.thumbnails.high\n  }\n})\n}\nhandleGoBack=()=>{\n  this.setState({selectedVideo:{},showIcon:false})\n}\nhandleVideoSelect=async(videoIndex,from)=>{\n  this.selectedVideo={};\n  if(from === 'search')\n  {\n    this.selectedVideo=this.videoListData.filter((videoData,index)=>index === videoIndex);\n    console.log(this.selectedVideo);\n  }\n  else{\n    this.selectedVideo=this.similarVideos.filter((videoData,index)=>index === videoIndex);\n  }\nconst data=await getSimilarVideos(this.selectedVideo[0].videoId);\nthis.fetchSimilarVideoData(data);\nthis.setState({\n  selectedVideo:this.selectedVideo[0],\n  similarVideos:this.similarVideos,\n  showIcon:true\n});\n}\n  render(){\n    console.log(this.state.selectedVideo);\n    return <div> \n      <div>\n      {this.state.showIcon ? <IconButton onClick={this.handleGoBack}>\n        <YouTubeIcon className={styles.youTubeIcon} color=\"secondary\"/>\n      </IconButton>:null}\n        <SearchComponent onSearch={this.handleSearch}/>    \n        </div>                                \n      <br/>\n      {\n        Object.keys(this.state.selectedVideo).length ?  \n        <SelectedVideo data={this.state.selectedVideo} \n        similarVideos={this.state.similarVideos}\n        onSelectItem={this.handleVideoSelect}\n        from=\"similar\"/> : null\n      }   \n      {\n        (this.state.videoListData.length && !Object.keys(this.state.selectedVideo).length)\n        ? <VideoList onSelectItem={this.handleVideoSelect} data={this.state.videoListData}\n        from=\"search\"/> : null\n      }        \n    </div>\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nReactDOM.render(  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"youtube_searchbar__-rIdo\",\"videoList\":\"youtube_videoList__2npOT\",\"videoPlayer\":\"youtube_videoPlayer__2b8v2\",\"imgDisplayer\":\"youtube_imgDisplayer__3dwOK\",\"ui\":\"youtube_ui__2ISJU\",\"items\":\"youtube_items__2uSNU\",\"unstackable\":\"youtube_unstackable__3ZklX\",\"item\":\"youtube_item__3IUSh\",\"image\":\"youtube_image__3O5aL\"};"],"sourceRoot":""}